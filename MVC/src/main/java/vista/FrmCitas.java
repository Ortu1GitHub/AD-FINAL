package vista;

import modelo.Citas;
import modelo.Medicos;
import modelo.Pacientes;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;


/**
 * @author MSI
 */
public class FrmCitas extends javax.swing.JInternalFrame {

    private JPanel panel1;

    /**
     * Creates new form NewJFrame
     */
    public FrmCitas() {

        initComponents();
        // Establecer la operaci√≥n por defecto al cerrar
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPacientes = new javax.swing.JTable();
        lblCitas = new javax.swing.JLabel();
        lblPacientes1 = new javax.swing.JLabel();
        lblMedicos = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbMedicos = new javax.swing.JTable();
        btnGenerarCita = new javax.swing.JButton();
        dtFechaCita = new com.toedter.calendar.JDateChooser();
        // Agrega el JSpinner para la hora
        SpinnerDateModel sm = new SpinnerDateModel();
        spinnerHora = new JSpinner(sm);
        JSpinner.DateEditor de = new JSpinner.DateEditor(spinnerHora, "HH:mm");
        spinnerHora.setEditor(de);
        btnEliminarCita = new javax.swing.JButton();
        btnModificarCita = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCitas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbPacientes.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null}
                },
                new String[]{
                        "SIP", "DNI", "NOMBRE", "APELLIDO 1", "APELLIDO 2", "TLFNO", "DIRECCION", "FECHA NAC"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbPacientes);
        if (tbPacientes.getColumnModel().getColumnCount() > 0) {
            tbPacientes.getColumnModel().getColumn(0).setResizable(false);
            tbPacientes.getColumnModel().getColumn(1).setResizable(false);
            tbPacientes.getColumnModel().getColumn(2).setResizable(false);
            tbPacientes.getColumnModel().getColumn(3).setResizable(false);
            tbPacientes.getColumnModel().getColumn(4).setResizable(false);
            tbPacientes.getColumnModel().getColumn(5).setResizable(false);
            tbPacientes.getColumnModel().getColumn(6).setResizable(false);
            tbPacientes.getColumnModel().getColumn(7).setResizable(false);
        }

        lblCitas.setText("Listado Citas");

        lblPacientes1.setText("Listado Pacientes");

        lblMedicos.setText("Listado Medicos");

        tbMedicos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null}
                },
                new String[]{
                        "NUM. COLEGIADO", "DNI", "NOMBRE", "APELLIDO 1", "APELLIDO 2", "TLFNO", "ESPECIALIDAD"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbMedicos);
        if (tbMedicos.getColumnModel().getColumnCount() > 0) {
            tbMedicos.getColumnModel().getColumn(0).setResizable(false);
            tbMedicos.getColumnModel().getColumn(1).setResizable(false);
            tbMedicos.getColumnModel().getColumn(2).setResizable(false);
            tbMedicos.getColumnModel().getColumn(3).setResizable(false);
            tbMedicos.getColumnModel().getColumn(4).setResizable(false);
            tbMedicos.getColumnModel().getColumn(5).setResizable(false);
            tbMedicos.getColumnModel().getColumn(6).setResizable(false);
        }

        btnGenerarCita.setText("Generar Cita");

        btnEliminarCita.setText("Eliminar Cita");
        btnEliminarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCitaActionPerformed(evt);
            }
        });

        btnModificarCita.setText("Modificar Cita");
        btnModificarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCitaActionPerformed(evt);
            }
        });

        tbCitas.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "ID MEDICO", "ID PACIENTE", "FECHA CITA", "FECHA CREACION"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbCitas);
        if (tbCitas.getColumnModel().getColumnCount() > 0) {
            tbCitas.getColumnModel().getColumn(0).setResizable(false);
            tbCitas.getColumnModel().getColumn(1).setResizable(false);
            tbCitas.getColumnModel().getColumn(2).setResizable(false);
            tbCitas.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(24, 24, 24)
                                                .addComponent(dtFechaCita, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(spinnerHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblCitas)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(lblPacientes1)
                                                        .addComponent(lblMedicos))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(btnModificarCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(btnEliminarCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(btnGenerarCita))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblPacientes1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dtFechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(spinnerHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblMedicos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnGenerarCita))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(lblCitas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(12, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(btnModificarCita)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnEliminarCita)
                                                .addGap(16, 16, 16))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>

    public void cargarDatosPacientes(List<Pacientes> listaPacientes) {

        DefaultTableModel modeloPacientes = (DefaultTableModel) tbPacientes.getModel();
        modeloPacientes.setRowCount(0);

        for (int i = 0; i < listaPacientes.size(); i++) {

            modeloPacientes.addRow(new Object[]{listaPacientes.get(i).getSip(), listaPacientes.get(i).getDNI(), listaPacientes.get(i).getNombre(), listaPacientes.get(i).getApellido1(), listaPacientes.get(i).getApellido2(), listaPacientes.get(i).getTelefono(), listaPacientes.get(i).getDireccion(), listaPacientes.get(i).getFecha_nacimiento()});
        }

        tbPacientes.setModel(modeloPacientes);
    }

    public void cargarDatosMedicos(List<Medicos> listaMedicos) {

        DefaultTableModel modeloMedicos = (DefaultTableModel) tbMedicos.getModel();
        modeloMedicos.setRowCount(0);

        for (int i = 0; i < listaMedicos.size(); i++) {

            modeloMedicos.addRow(new Object[]{listaMedicos.get(i).getNumero_colegiado(), listaMedicos.get(i).getDNI(), listaMedicos.get(i).getNombre(), listaMedicos.get(i).getApellido1(), listaMedicos.get(i).getApellido2(), listaMedicos.get(i).getTelefono(), listaMedicos.get(i).getEspecialidad()});
        }

        tbMedicos.setModel(modeloMedicos);
    }

    public void cargarDatosCitas(List<Citas> listaCitas) {

        DefaultTableModel modeloCitas = (DefaultTableModel) tbCitas.getModel();
        modeloCitas.setRowCount(0);

        for (int i = 0; i < listaCitas.size(); i++) {

            modeloCitas.addRow(new Object[]{listaCitas.get(i).getMedico_id(), listaCitas.get(i).getPaciente_id(), listaCitas.get(i).getFecha(), listaCitas.get(i).getCreated_at()});
        }

        tbCitas.setModel(modeloCitas);
    }

    private void btnEliminarCitaActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnModificarCitaActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    public javax.swing.JButton btnEliminarCita;
    public javax.swing.JButton btnModificarCita;
    public javax.swing.JButton btnGenerarCita;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCitas;
    private javax.swing.JLabel lblMedicos;
    private javax.swing.JLabel lblPacientes1;
    public javax.swing.JTable tbCitas;
    public javax.swing.JTable tbMedicos;
    public javax.swing.JTable tbPacientes;
    public com.toedter.calendar.JDateChooser dtFechaCita;
    public javax.swing.JSpinner spinnerHora;
    // End of variables declaration
}
